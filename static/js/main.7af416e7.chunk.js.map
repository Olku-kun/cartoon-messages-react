{"version":3,"sources":["components/MyNavbar.js","pages/HomePage.js","components/MyPicture.js","pages/UserGallery.js","components/Tile.js","pages/Templates.js","components/Canvas.js","pages/MyMessage.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","Navbar","className","bg","variant","Toggle","aria-controls","Collapse","id","Nav","Link","href","React","Component","HomePage","Container","Row","Col","sm","target","Button","size","active","src","alt","MyPicture","picture","this","props","image","title","author","UserGallery","state","pictures","userImages","mypictures","map","pic","i","key","lg","md","newImage","Tile","navigateToId","selectedTemplate","openMyMessage","bind","setState","template","to","onClick","style","cursor","Templates","tiles","templates","Canvas","wrapText","ctx","lineHeight","maxWidth","x","y","text","words","split","line","n","length","testLine","measureText","width","fillText","downloadImg","e","canvas","current","toDataURL","handleChange","value","handleSubmit","username","addUserImage","LgShow","createRef","lgShow","message","img","getContext","drawImage","parseInt","fillStyle","font","canvastext","ref","height","download","crossOrigin","imgSrc","display","type","onChange","Modal","show","onHide","aria-labelledby","Header","closeButton","Title","Body","MyMessage","handleInput","handleClick","preventDefault","bubbleText","deleteMessage","jsonTemplates","myTemplate","match","params","undefined","selectedTemp","find","temp","color","fontSize","rows","cols","placeholder","fontFamily","maxLength","ButtonToolbar","App","newPic","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7af416e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar, } from 'react-bootstrap';\r\n\r\nclass MyNavbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <Navbar className = \"myNavbar\" bg=\"light\" variant=\"light\">\r\n\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#/\">Home</Nav.Link>\r\n                        <Nav.Link href=\"#/templates\">Template Gallery</Nav.Link>\r\n                        <Nav.Link href=\"#/gallery\">User Gallery</Nav.Link>\r\n\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyNavbar;","import React from 'react';\r\n\r\nimport { Container, Button, Row, Col } from 'react-bootstrap';\r\n\r\nclass HomePage extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <Container className = \"base\">\r\n                <Row>\r\n                    <Col className=\"steps\" sm={6}>\r\n                <h2 className = \"mb-5\">Steps to create your cartoon message </h2>\r\n                \r\n                <ol>\r\n                    <li>Choose your favorite template from the <a href=\"#/templates\" target=\"_blank\">Template Gallery</a> </li>\r\n                    \r\n                    <li>Enter your message to the text input field\r\n                   \r\n                    </li>\r\n                    <li>Save your new cartoon message image to your computer or/and add it to our <a href=\"#/gallery\" target=\"_blank\">User Gallery</a>\r\n                   </li>\r\n                </ol>\r\n                <Button variant=\"success\" size=\"lg\" active href=\"#/templates\">Start</Button>\r\n                </Col>\r\n                <Col sm={6}>\r\n                <img src = \"siteimages/step1.png\" alt=\"\"/>\r\n                <img src = \"siteimages/step2.png\" alt=\"\"/>\r\n                <img src = \"siteimages/step3.png\" alt=\"\"/>\r\n                </Col>\r\n               </Row>  \r\n                \r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\n\r\nclass MyPicture extends React.Component {\r\n    \r\n    render() {\r\n        const picture = this.props.picture;\r\n        return(\r\n            <div  className='m-2'>\r\n            <img className = \"gallery-img\" src={picture.image} title={picture.author} alt={picture.alt} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default MyPicture","import React from 'react';\r\nimport {  Container, Col, Row } from 'react-bootstrap';\r\nimport MyPicture from '../components/MyPicture';\r\n\r\nclass UserGallery extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pictures: this.props.userImages\r\n        }\r\n    }\r\n    render() {\r\n        const {pictures} = this.state;\r\n        const mypictures = pictures.map((pic, i) => <Col  key = {i}  lg=\"4\" md=\"6\" sm=\"1\"><div className = \"imagebox\"><h5 className = \"username\">By {pic.author}</h5><MyPicture picture={pic} /></div></Col>);\r\n        return (\r\n            \r\n                <Container className = \"base\">\r\n                    <div className = \"imagebox\">\r\n                    <h5 className = \"username\">By {this.props.newImage.author}</h5>\r\n                    <img className = \"gallery-img\" src = {this.props.newImage.pic} alt = \"\"/>\r\n                    </div>\r\n              <Row>{mypictures}</Row>\r\n              \r\n                </Container>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserGallery;\r\n","import React from 'react';\r\nimport { Redirect, } from 'react-router-dom';\r\n\r\n\r\nclass Tile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigateToId: null,\r\n            selectedTemplate: null\r\n        };\r\n        this.openMyMessage = this.openMyMessage.bind(this);\r\n    }\r\n    openMyMessage() {\r\n\r\n        this.setState({\r\n            navigateToId: this.props.template.title,\r\n            selectedTemplate: this.props.template\r\n        });\r\n\r\n    }\r\n    render() {\r\n        if (this.state.navigateToId != null) {\r\n            return (\r\n                <Redirect to={'/templates/' + this.state.navigateToId} />\r\n            )\r\n        } else {\r\n            const template = this.props.template;\r\n            return (\r\n                <div onClick={this.openMyMessage} id={template.title} className='m-2'>\r\n                    <img style = {{cursor: \"pointer\"}} className = \"gallery-img\" src={template.src} title={template.title} alt={template.alt} />\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Tile;\r\n","import React from 'react';\r\nimport Tile from '../components/Tile'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass Templates extends React.Component {\r\n   \r\n    render() {\r\n        const templates = this.props.templates;\r\n\r\n        \r\n        const tiles = templates.map((template, i) => <Col  key = {i} id={template.title} lg=\"4\" md=\"6\" sm=\"1\"><Tile template={template} /></Col>);\r\n        \r\n        return (\r\n            <Container className = \"base\">\r\n                <h2 className=\"text-center\">Choose your template, click on the image you liked.</h2>\r\n                <Row>{tiles} </Row>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Templates;\r\n","import React from 'react';\r\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap';\r\n\r\nclass Canvas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.image = React.createRef();\r\n        this.canvas = React.createRef();\r\n        this.state = {\r\n            author: \"\",\r\n            image: \"\",\r\n            lgShow: false,\r\n        }\r\n        this.message = this.message.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        this.message()\r\n    }\r\n    componentDidUpdate() {\r\n        this.message()\r\n    }\r\n    message() {\r\n        const img = this.image.current;\r\n        const canvas = this.canvas.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        ctx.drawImage(img, 0, 0);\r\n        const maxWidth = 180;\r\n        const lineHeight = 21;\r\n        var x = parseInt(this.props.x);\r\n        var y = parseInt(this.props.y);\r\n\r\n        ctx.fillStyle = \"#333\";\r\n        ctx.font = \"25px Caveat\";\r\n        const text = this.props.canvastext;\r\n        this.wrapText(ctx, lineHeight, maxWidth, x, y, text);\r\n    }\r\n    wrapText = (ctx, lineHeight, maxWidth, x, y, text) => {\r\n\r\n        var words = text.split(' ');\r\n        var line = '';\r\n        for (var n = 0; n < words.length; n++) {\r\n            var testLine = line + words[n] + ' ';\r\n            var metrics = ctx.measureText(testLine);\r\n            var testWidth = metrics.width;\r\n            if (testWidth > maxWidth && n > 0) {\r\n                ctx.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        ctx.fillText(line, x, y);\r\n    }\r\n\r\n    downloadImg = (e) => {\r\n        var canvas = this.canvas.current;\r\n        var image = canvas.toDataURL('image/jpg');\r\n        e.target.href = image;\r\n\r\n        this.setState({ image });\r\n    }\r\n    handleChange = (e) => {\r\n        const author = e.target.value;\r\n        this.setState({ author })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        var canvas = this.canvas.current;\r\n        var image = canvas.toDataURL('image/jpg');\r\n        var username = this.state.author;\r\n        this.props.addUserImage(image, username);\r\n        this.setState({ LgShow: true })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col ><div>\r\n                        <canvas ref={this.canvas}\r\n                            width={400}\r\n                            height={400}\r\n                        />\r\n                        <a className=\"download-btn rounded\" variant=\"secondary\" download=\"image.jpg\" href=\"#\" onClick={this.downloadImg} crossOrigin=\"anonymous\" alt=\"\" >Download</a>\r\n                        <img ref={this.image} src={this.props.imgSrc} alt=\"\" style={{ display: 'none' }} />\r\n                    </div>\r\n                    </Col>\r\n                    <Col >\r\n                        <div className=\"submitting-block\">\r\n                            <h4 className=\"m-3\">Enter your name</h4>\r\n                            <input className=\"m-3\" type=\"text\"  value={this.state.author} onChange={this.handleChange} />\r\n                            <Button className=\"m-3\" variant=\"success\" size=\"lg\" type=\"button\" onClick={this.handleSubmit}>Submit to Gallery</Button>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Modal  size=\"lg\" show={this.state.LgShow} onHide={() => this.setState({ LgShow: false })}\r\n                    aria-labelledby=\"example-modal-sizes-title-lg\" >\r\n                    <Modal.Header closeButton className = \"mymodal\">\r\n                        <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n                            Your Message was added to the User Gallery\r\n          </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className = \"mymodal\"><a href=\"#/gallery\">Go to the User Gallery</a></Modal.Body>\r\n                </Modal>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Canvas","import React from 'react';\r\nimport { Button, ButtonToolbar, Container, Row, Col } from 'react-bootstrap';\r\nimport jsonTemplates from '../data/templates';\r\nimport Canvas from '../components/Canvas';\r\n\r\n\r\nclass MyMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            templates: jsonTemplates,\r\n            myTemplate: this.props.match.params.id,\r\n            text: '',\r\n            bubbleText: 'Your text here',\r\n            image: \"\",\r\n            username: undefined\r\n\r\n        };\r\n\r\n    }\r\n\r\n    handleInput = (e) => {\r\n\r\n        var text = e.target.value;\r\n\r\n        this.setState({ text: text })\r\n        // console.log(this.state.text);\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            text: \"\",\r\n            bubbleText: this.state.text\r\n        })\r\n    }\r\n    deleteMessage = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            text: \"\",\r\n            bubbleText: \"\"\r\n        })\r\n    }\r\n    addUserImage = (image, username) => {\r\n\r\n        this.props.addUserImage(image, username);\r\n    }\r\n    render() {\r\n        const { myTemplate, templates } = this.state;\r\n        let selectedTemp = templates.find((temp) => {\r\n            if (temp.title === myTemplate) {\r\n                return temp;\r\n            }\r\n        })\r\n\r\n        return (\r\n            <Container className=\"base\">\r\n                <Row>\r\n\r\n                    <Col sm={3}>\r\n                        <ul><h4>Instructions</h4>\r\n                            <li>Enter you message to the text box (limit 80 characters)</li>\r\n                            <li>Click submit button to add you message to the template</li>\r\n                            <li>Click download button to save your cartoon message</li>\r\n                            <li>Enter your nickname and submit your image to User Gallery</li>\r\n                        </ul>\r\n                        <div>\r\n                            <h4 style = {{color: \"tomato\"}}>Type your message:</h4>\r\n                            <span className=\"m-2\" style={{ color: \"gray\", fontSize: \"0.7em\" }}>Characters left: {80 - this.state.text.length}</span>\r\n                        </div>\r\n                        <textarea className=\"m-2\" rows=\"3\" cols=\"25\" placeholder=\"...type here\" onChange={this.handleInput} value={this.state.text} style={{ fontFamily: \"Arial\" }} maxLength=\"80\" />\r\n\r\n\r\n                        <ButtonToolbar className=\"d-flex justify-content-start\">\r\n                            <Button className=\"m-2\" variant=\"success\" size=\"sm\" onClick={this.handleClick} >\r\n                                Submit\r\n  </Button>\r\n                            <Button className=\"m-2\" variant=\"danger\" size=\"sm\" onClick={this.deleteMessage}>\r\n                                Clear\r\n    </Button>\r\n                        </ButtonToolbar></Col>\r\n\r\n\r\n                    <Col sm={9}>\r\n                        <div >\r\n                            <Canvas canvastext={this.state.bubbleText} x={selectedTemp.x} y={selectedTemp.y} imgSrc={selectedTemp.src} addUserImage={this.addUserImage} />\r\n                        </div>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyMessage;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Route, } from 'react-router-dom';\r\nimport './App.css';\r\nimport MyNavbar from './components/MyNavbar';\r\nimport HomePage from './pages/HomePage';\r\nimport UserGallery from './pages/UserGallery';\r\nimport Templates from './pages/Templates';\r\nimport jsonTemplates from './data/templates';\r\nimport MyMessage from './pages/MyMessage';\r\nimport userImages from './data/userimages';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      templates: jsonTemplates,\r\n      userImages: userImages,\r\n      newImage: {}\r\n    }\r\n  }\r\n  addUserImage = (image, username) => {\r\n\r\n    const newPic = {\r\n      author: username,\r\n      pic: image,\r\n      alt: \"\"\r\n    }\r\n    this.setState({ newImage: newPic })\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Container className=\"bg-light\">\r\n        <MyNavbar />\r\n\r\n\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n        <Route exact path=\"/gallery\">\r\n          <UserGallery userImages={this.state.userImages} newImage={this.state.newImage} />\r\n        </Route>\r\n        <Route exact path=\"/templates\">\r\n          <Templates templates={this.state.templates} />\r\n        </Route>\r\n\r\n        <Route exact path=\"/templates/:id\" render={props => <MyMessage {...props} addUserImage={this.addUserImage} />} />\r\n\r\n\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter} from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}